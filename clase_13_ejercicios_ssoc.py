# -*- coding: utf-8 -*-
"""Clase 13 ejercicios ssoc

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AMwOpytRq7x2scWuWC-GLD3OzngEr3pJ
"""

#crea una lista de 2 al 300 donde solo incluyas numeros pares

print([i for i in range(2,300) if i%2==0])

#para que salga en formato vertical: 
#for i in range (2,300):
  #if(i%2==0):
    #print(i)

#crea una lista de diccionarios de datos de un usuario ingresado por consola (nombre, apellido, edad, telefono, correo)

lista=[]

nombre= input("ingresar nombre: ")
apellido= input("ingresar apellido: ")
edad= input("ingresar edad: ")
telefono=input("ingresar telefono: ")
correo= input("ingresar correo: ")

diccionario= {"nombre": nombre, "apellido": apellido, "edad": edad, "telefono": telefono, "correo": correo }
lista.append(diccionario)

print(lista)

#crea 5 perros que tienen nombre, raza, edad y peso

lista=[]

for i in range (0,3):
  nombre= input("ingresar nombre: ")
  raza= input("ingresar raza: ")
  edad= input("ingresar edad: ")
  peso=input("ingresar peso: ")
  correr=input("corre?: ")
  ladra=input("que tal ladra?: ")

diccionario1= {"nombre": nombre, "raza": raza, "edad": edad, "peso": peso, "correr": correr, "ladra": ladra}
diccionario2= {"nombre": nombre, "raza": raza, "edad": edad, "peso": peso, "correr": correr, "ladra": ladra}
diccionario3= {"nombre": nombre, "raza": raza, "edad": edad, "peso": peso, "correr": correr, "ladra": ladra}
diccionario4= {"nombre": nombre, "raza": raza, "edad": edad, "peso": peso, "correr": correr, "ladra": ladra}
diccionario5= {"nombre": nombre, "raza": raza, "edad": edad, "peso": peso, "correr": correr, "ladra": ladra}

lista.append(diccionario1),print("perro 1:")
lista.append(diccionario2),print("perro 2:")
lista.append(diccionario3),print("perro 3:")
lista.append(diccionario3),print("perro 4:")
lista.append(diccionario3),print("perro 5:")

print(lista)

class Bacteria:
  def __init__(self, forma, gram, cultivo, colonia):
    self.forma= forma
    self.gram= gram
    self.cultivo= cultivo 
    self.colonia= colonia

  def Descripcion(self):
    return f"forma de la bacteria: {self.forma}, tinción de gram: {self.gram}, tipo de cultivo: {self.cultivo} y forma de la colonia: {self.colonia}"

class Minibacter(bacteria):
  pass 

#repetir de acuerdo al número de bacterias que quiera crear
b= minibacter("bacilo", "gram positiva", "agar 50%","filamentosa") #colocar atributos
b.descripcion()

#crea una clase padre figura y que permita calcular el area, la formula depende de triangulo, cuadrado, circulo...


class Figura:
  def __init__(self, base, altura, lado):
    self.base= Base
    self.altura= altura
    self.lado= lado

class Triangulo(Figura):
  def calculo_area(self):
    operacion= self.base*self.altura/2
    return operacion

class Cuadrado (Figura):
  def calculo_area1():
    operacion1= self.lado*self.lado
    return operacion

class Rectangulo (Figura):
  def calculo_area2():
    operacion2= self.base*self.altura
    return operacion

"""desafíos:"""

def saludar ():
  print("hola mundo")

saludar()

print([i for i in range(0,101)])

lista=[]

nombre= input("ingresar nombre: ")
categoria= input("ingresar categoria: ")
duracion= input("ingresar duracion: ")


diccionario= {"nombre": nombre, "categoria": categoria, "duración": duracion }


print(diccionario)

class Vehiculo:
  def __init__(self, marca, km, color):
    self.marca= marca
    self.km= km
    self.color= color

  def Descripcion(self):
    return f"marca del carro: {self.marca}, kilometraje: {self.km} y color: {self.color}"

class Carro(Vehiculo):
  pass 

b= Carro("mercedez", "1100km", "rojo") #colocar atributos
b.Descripcion()