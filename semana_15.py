# -*- coding: utf-8 -*-
"""Semana 15

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iMZc-mHHcCoOk7JGiJ-p_swm4JhNRVcr
"""

lista=[]
for i in range (2,301):
  if i % 2 ==0:
    lista.append(i)
print(lista)

lista=[]
conteo=0

while conteo < 2:
  print("Datos")
  nombre=input("Ingresar nombre del usuario ")
  apellido=input("Ingresar apellido del usuario ")
  edad=input("Ingresar edad del usuario ")
  telefono=input("Ingresar número teléfonico ")
  correo=input("Ingresar correo del usuario ")
  diccio={"Nombre":nombre, "Apellido":apellido, "Edad":edad, "Teléfono":telefono, "Correo":correo}
  lista.append(diccio)
  conteo=conteo+1

print(lista)

tupla=(2,3,4,5)
num1=int(input("Número 1: "))
num2=int(input("Número 2: "))
num3=int(input("Número 3: "))
num4=int(input("Número 4: "))
num5=int(input("Número 5: "))
num6=int(input("Número 6: "))
num7=int(input("Número 7: "))
num8=int(input("Número 8: "))
num9=int(input("Número 9: "))
num10=int(input("Número 10: "))

lista=[]
conteo=0

while conteo < 5:
  print("Datos perrito")
  raza=str(input("Raza del perro: "))
  nombre=str(input("Nombre del perro: "))
  edad=str(input("Edad del perro: "))
  peso=str(input("Peso del perro: "))

  diccio={"Raza":raza, "Nombre":nombre, "Edad":edad, "Peso":peso, "Funcionalidad":"Correr y ladrar"}
  lista.append(diccio)
  conteo=conteo+1

print(lista)

#Vamos a poner en práctica lo aprendido y vamos a agregar nuevas funcionalidades a la clase, 
#vamos a mostrar el sonido que hace el perrito, vamos a mostrar su peso y edad y adicionalmente
#vas a crear un método que no recibe nada, solo muestra la información de los veterinarios (3) donde 
#se podría llevar a los perritos. Pasa información a la clase de manera dinámica usando inputs.
class Perro:
  def __init__(self,raza, nombre, edad, peso, sonido):
    self.raza = raza
    self.nombre = nombre
    self.edad = edad
    self.peso = peso
    self.sonido = sonido

  def mostrar_info(self):
    return f"El perrito es de raza {self.raza}, su nombre es {self.nombre}, tiene {self.edad}, pesa {self.peso} y hace {self.sonido}"

  def info_veterinarios(self):
    print("El perrito es de raza" + self.raza + ", su nombre es " + self.nombre + ", tiene " + self.edad + ", pesa " + self.peso + "y hace " + self.sonido)
    dicci={
        "Veterinario Javier Arvelaez":"Clinica Veterinaria de Medellín",
        "Veterinaria Luisa López":"Clinica Veterinaria Ditaires",
        "Veterinaria Mariana Ospina":"Clínica Veterinaria Zoogranja"
    }
    print(dicci)

class perro1(Perro):
  pass

a= str(input("ingrese la raza de su perrito: "))
b= str(input("ingrese el nombre de su perrito: "))
c= input("ingrese la edad de su perrito: ")
d= input("ingrese el peso de su perrito: ")
e= str(input("Ingrese el sonido que hace su perrito: "))


b = perro1(a, b, c, d, e)
b.info_veterinarios()

#Ejemplo de clase
class Perro: # class es una palabra reservada que permite indicar que se creará una clase
    def __init__(self, nombre): #Método constructor - Definir valores iniciales
        self.nombre = nombre # Definir valores a los atributos de la clase
        
    def mostrarInfo(self): # Método
        print("El nombre del perrito es: " + self.nombre)
# Utilizando una clase
nombre = input("ingrese el nombre de su perrito ")
perro1 = Perro(nombre)
perro1.mostrarInfo()

#Crea una clase que te permita crear estudiantes de una clase
class Estudiante:
  def __init__(self,nombre,edad,altura,color_favorito,mes_cumple):
    self.nombre = nombre
    self.edad = edad
    self.altura = altura
    self.color_favorito = color_favorito
    self.mes_cumple = mes_cumple

  def mostrar_info(self):
    return f"{self.nombre} es el/la alumn@ nuev@ de la clase. Tiene {self.edad} y mide {self.altura}. Su color favorito es {self.color_favorito} y cumple años en {self.mes_cumple}"

class Alumno_nuevo(Estudiante):
  pass

alumno = Alumno_nuevo("Sara","18 años","1.50 m","Negro","Enero")
alumno.mostrar_info()

#Crea una clase que te permita crear figuras cuadradas y rectangulares, según los parametros del usuario.
class Figura:
  def __init__(self,lados_paralelos1,lados_paralelos2,color):
    self.lados_paralelos1 = lados_paralelos1
    self.lados_paralelos2 = lados_paralelos2
    self.color = color

  def cuadrado_rectangulo(self):
    if self.lados_paralelos1 == self.lados_paralelos2:
      print("La figura creada con dos lados paralelos de " + self.lados_paralelos1 + "cm y con los otros lados paralelos de " + self.lados_paralelos2 + "cm es un cuadrado de color " + self.color)
    else:
      print("La figura creada con dos lados paralelos de " + self.lados_paralelos1 + "cm y con los otros lados paralelos de " + self.lados_paralelos2 + "cm es un rectángulo de color " + self.color)
  
class figura_usuario(Figura):
  pass

b = figura_usuario("20","23","naranja")
b.cuadrado_rectangulo()